		result = result[0];
		len = result.length;
		degree = result[len];
		if (/[\*]/.test(result))
		{
			tmp = result.split('*')[0];
			if (/[\*,\+,\-\/]/.test(tmp))
			{
				sign = tmp[0];
				k = tmp.slice(1);
			}
			else
				k = tmp;
		}
		tmp = sign + k;



				// if (/[\*,\+,\-\/]/.test(result[0]))
		// {

		// }
		// if (/[x,X]\^\d/.test(result))
		// {
		// 	len = result.length;
		// 	k = result.split('*')[0];
		// 	degree = result[len - 1];
		// 	sign = result[0];
		// 	if (degree == 0)
		// 		result = k;
		// 	element = {
		// 		sign:result[0],
		// 		k:k,
		// 		degree:degree
		// 	}
		// 	elements.push(element);
		// }


	while (result = re.exec(sInput)) {

		var tmp = result[0].match(/[x,X]\^\d/);
		var degree = tmp[0].split('^')[1];
		if (degree == 0)
			var test = result[0].replace(/[x,X]\^\d/, '1');
		count++;
	}
	if (count == 0)
	{
		console.log("e2");
		printError("Incorrect Input");
		return 0;
	}


import telebot
from telebot import types

bot = telebot.TeleBot("987157690:AAEJMEdVdpRPePGGbCFfsGqjuQAwsBD54hc")


@bot.message_handler(commands=['start'])
def welcome(message):
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("Часть 1")
    item2 = types.KeyboardButton("Часть 2")

    markup.add(item1, item2)

    bot.send_message(message.chat.id, ".", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'Часть 1':
            bot.send_message(message.chat.id, "https://yadi.sk/d/BakwW0Q1Z5hZ0w")
        elif message.text == 'Часть 2':
            bot.send_message(message.chat.id, "https://yadi.sk/d/vhuY87vF4LbXgA")

# RUN
bot.polling(none_stop=True)

// function testy(str) {
// 	var splits = str.split(/['\+,\-,\=]/);
// 	//var operators = str.split(/\d{0,100}\.?\d{0,100}?[\*,\+,\-\/]?[x,X]\^\d/);
// 	var operators = str.split(/[\+,\-]?\d{0,100}\.?\d{0,100}?[\*,\+,\-\/]?[x,X]\^\d/);
// 	//console.log(operators);
// 	var step = "";
// 	var n = 0;
// 	var i = 0;
// 	var elements = [];


// 	if (splits.length != operators.length - 1)
// 	{
// 		console.log("e3");
// 		console.log(splits);
// 		console.log(operators);
// 		printError("Incorrect Input");
// 		return 0;
// 	}
// //	while (n < operators.length)
// //	{
// //		if (operators[n] == '=')
// //			operators.splice(n, 1);
// //		n++;
// //	}
// 	while (i < splits.length)
// 	{
// 		var len = 0;
// 		var k = 0;
// 		var degree = 0;
// 		var sign = '';
// 		var element = {
// 			sign:null,
// 			k:null,
// 			degree:null
// 		}

// 		if (/[x,X]\^\d/.test(splits[i]))
// 		{
// 			len = splits[i].length;
// 			k = splits[i].split('*')[0];
// 			degree = splits[i][len - 1];
// 			sign = splits[i][0];
// 			if (degree == 0)
// 				splits[i] = k;
// 			element = {
// 				sign:operators[n],
// 				k:k,
// 				degree:degree
// 			}
// 			elements.push(element);
// 		}
// 		else
// 		{
// 			if (operators[n + 1] == '=')
// 			{
// 				element = {
// 					sign:operators[n + 1],
// 					k:splits[i],
// 					degree:null
// 				}
// 			}
// 			else
// 			{
// 				element = {
// 					sign:operators[n],
// 					k:splits[i],
// 					degree:null
// 				}
// 			}
// 			elements.push(element);
// 		}
		
// 		// console.log(operators[i]);
// 		// console.log(splits[i]);
// 		if (operators[n + 1] == '=')
// 		{
// 			step += operators[n] + splits[i] + operators[n + 1];
// 			n++;
// 		}
// 		else
// 			step += operators[n] + splits[i];
// 		i++;
// 		n++;
// 	}
// 	console.log(elements)
// 	printStep("Преобразование: значений выражения, содержащего степени"); //упростить выражение classify 
// 	printStep(step);
// 	return 1;
// }